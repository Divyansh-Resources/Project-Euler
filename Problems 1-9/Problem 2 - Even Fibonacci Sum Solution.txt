Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

---------------------------------------------------------------------------

The logic used is uncomplicated. 

Firstly, build an array of Fibonacci numbers. 
Secondly, use a loop to sum every third term since F_n is even whenever n is a multiple of 3. All that needs to 
be noticed here that the first two terms are even and odd. So, the sequence (even, odd, odd) is forced. It can also be proved with mathematical induction on the indices.

I suppose it isn't necessary   

The answer is 4613732.

The algorithm and mathematics was simple. But, for some reason the program didn't work. There was an overflow error. I fixed it, and I only allotted 35 slots
because I found out the 35th term exceeds four million. The break condition worked when I put it inside the for loop, but not when I put it inside the for loop definition.
I don't know why.