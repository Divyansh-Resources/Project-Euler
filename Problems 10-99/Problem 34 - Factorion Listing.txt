145 is a curious number, as 1! + 4! + 5! = 1 + 24 + 120 = 145.

Find the sum of all numbers which are equal to the sum of the factorial of their digits.

Note: as 1! = 1 and 2! = 2 are not sums they are not included.

At first glance, it looks scary. It looks scary because there is no upper bound given.
What if there are infinitely many factorions(Numbers which are the sum of their digit factorials) ? Fortunately, there aren't.

We need to use some logical reasoning to make an upper bound on the possible number of digits a factorian can have and then check the reduced search space with a computer.

Upper bound #1
Let's say a factorion has d digits. It can have a value of atmost 9!d (if all the digits are 9).
It must satisfy the inequality - 10^{d-1} < n <= 9!d.
9!= 326880. It has six digits. When d = 8, 10^{d-1} > 9!d. It is easy to see that the right hand side increases by adding a six digit number every time d is increased and 
the left hand side increases by being multiplied by 10 every time d increases by 1. It is easy to see, heuristically that the condition never holds after d = 8.

So, now we have an upper bound of 7 digits.

Upper bound #2
7 x 9! = 2540160

It can be sharpened further. But, I will stop here for simplicity. Wikipedia sharpened the upper bound to 149999

--------------

Here's what I did. Built a hash table of where t[n] = n!. I did this because I won't have to calculate factorial every time. 
I only need to calculate all nine factorials once. I wasn't catching one of the factorions because I had forgotten to include 0 in the hash table.

Run a loop that goes from 1 to the upper bound.
For each i, find the sum of the factorials of the digits. This is only slightly more expensive than finding the sum of the digits themselves because 
of the hash table. The factorials are not calculated every time.

If a hit is gotten, it is added to the solution vector.